# CALLED WORKFLOW
# 1. You can connect up to four levels of workflows.
# 2. Reusable workflows stored within a private repository can only be used by workflows within the same repository.
# 3. Any environment variables set in an env context defined at the workflow level in the caller workflow
#    are not propagated to the called workflow.
name: Reusable workflow-build_llvm_libraries&build_lldb_if_needed

on:
  workflow_call:
    inputs:
      runs-on:
        required: true
        # can't pass array now, workaround by passing Json string and deserialize later
        default: "['ubuntu-20.04', 'ubuntu-22.04']"
        type: string
      build-lldb:
        required: true
        default: true
        type: boolean

jobs:
  build_llvm_libraries:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ${{ fromJson(inputs.runs-on) }}

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Cache LLVM libraries
        id: cache_llvm
        uses: actions/cache@v3
        with:
          path: |
            ./core/deps/llvm/build/bin
            ./core/deps/llvm/build/include
            ./core/deps/llvm/build/lib
            ./core/deps/llvm/build/libexec
            ./core/deps/llvm/build/share
          key: ${{ matrix.os }}-${{ env.LLVM_CACHE_SUFFIX }}

      - name: Build llvm and clang from source
        id: build_llvm
        if: ${{ steps.cache_llvm.outputs.cache-hit != 'true' }} && ${{ !inputs.build-lldb }}
        run: /usr/bin/env python3 ./build_llvm.py --arch X86 WebAssembly
        working-directory: build-scripts

      - name: Build llvm and clang from source, and build lldb too
        id: build_llvm_plus_lldb
        if: ${{ steps.cache_llvm.outputs.cache-hit != 'true' }} && ${{ inputs.build-lldb }}
        run: /usr/bin/env python3 ./build_llvm.py --arch X86 WebAssembly --project clang lldb
        working-directory: build-scripts
