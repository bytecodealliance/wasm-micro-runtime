(module
  (func $report (import "" "report") (param i32))

  (memory (export "mem") 256 256)

  (func $wasm_set_byte (export "set_byte") (param i32 i32)
      (call $report (i32.const 1))
      (i32.store8 (local.get 0) (local.get 1))
  )

  (func $wasm_get_byte (export "get_byte") (param i32) (result i32)
      (call $report (i32.const 2))
      (i32.load(local.get 0))
  )

  (data (;0;) (i32.const 1024) "std::bad_function_call\00\00\00\00\00\00H\04\00\00\02\00\00\00\03\00\00\00\04\00\00\00NSt3__217bad_function_callE\00\00\0b\00\00,\04\00\000\09")
  (data (;1;) (i32.const 1124) "\02\00\00\00\03\00\00\00\05\00\00\00\07\00\00\00\0b\00\00\00\0d\00\00\00\11\00\00\00\13\00\00\00\17\00\00\00\1d\00\00\00\1f\00\00\00%\00\00\00)\00\00\00+\00\00\00/\00\00\005\00\00\00;\00\00\00=\00\00\00C\00\00\00G\00\00\00I\00\00\00O\00\00\00S\00\00\00Y\00\00\00a\00\00\00e\00\00\00g\00\00\00k\00\00\00m\00\00\00q\00\00\00\7f\00\00\00\83\00\00\00\89\00\00\00\8b\00\00\00\95\00\00\00\97\00\00\00\9d\00\00\00\a3\00\00\00\a7\00\00\00\ad\00\00\00\b3\00\00\00\b5\00\00\00\bf\00\00\00\c1\00\00\00\c5\00\00\00\c7\00\00\00\d3\00\00\00\01\00\00\00\0b\00\00\00\0d\00\00\00\11\00\00\00\13\00\00\00\17\00\00\00\1d\00\00\00\1f\00\00\00%\00\00\00)\00\00\00+\00\00\00/\00\00\005\00\00\00;\00\00\00=\00\00\00C\00\00\00G\00\00\00I\00\00\00O\00\00\00S\00\00\00Y\00\00\00a\00\00\00e\00\00\00g\00\00\00k\00\00\00m\00\00\00q\00\00\00y\00\00\00\7f\00\00\00\83\00\00\00\89\00\00\00\8b\00\00\00\8f\00\00\00\95\00\00\00\97\00\00\00\9d\00\00\00\a3\00\00\00\a7\00\00\00\a9\00\00\00\ad\00\00\00\b3\00\00\00\b5\00\00\00\bb\00\00\00\bf\00\00\00\c1\00\00\00\c5\00\00\00\c7\00\00\00\d1\00\00\00-+   0X0x\00(null)")
  (data (;2;) (i32.const 1536) "\11\00\0a\00\11\11\11\00\00\00\00\05\00\00\00\00\00\00\09\00\00\00\00\0b")
  (data (;3;) (i32.const 1568) "\11\00\0f\0a\11\11\11\03\0a\07\00\01\13\09\0b\0b\00\00\09\06\0b\00\00\0b\00\06\11\00\00\00\11\11\11")
  (data (;4;) (i32.const 1617) "\0b")
  (data (;5;) (i32.const 1626) "\11\00\0a\0a\11\11\11\00\0a\00\00\02\00\09\0b\00\00\00\09\00\0b\00\00\0b")
  (data (;6;) (i32.const 1675) "\0c")
  (data (;7;) (i32.const 1687) "\0c\00\00\00\00\0c\00\00\00\00\09\0c\00\00\00\00\00\0c\00\00\0c")
  (data (;8;) (i32.const 1733) "\0e")
  (data (;9;) (i32.const 1745) "\0d\00\00\00\04\0d\00\00\00\00\09\0e\00\00\00\00\00\0e\00\00\0e")
  (data (;10;) (i32.const 1791) "\10")
  (data (;11;) (i32.const 1803) "\0f\00\00\00\00\0f\00\00\00\00\09\10\00\00\00\00\00\10\00\00\10\00\00\12\00\00\00\12\12\12")
  (data (;12;) (i32.const 1858) "\12\00\00\00\12\12\12\00\00\00\00\00\00\09")
  (data (;13;) (i32.const 1907) "\0b")
  (data (;14;) (i32.const 1919) "\0a\00\00\00\00\0a\00\00\00\00\09\0b\00\00\00\00\00\0b\00\00\0b")
  (data (;15;) (i32.const 1965) "\0c")
  (data (;16;) (i32.const 1977) "\0c\00\00\00\00\0c\00\00\00\00\09\0c\00\00\00\00\00\0c\00\00\0c\00\000123456789ABCDEF-0X+0X 0X-0x+0x 0x\00inf\00INF\00nan\00NAN\00.")
  (data (;17;) (i32.const 2092) "\07")
  (data (;18;) (i32.const 2131) "\ff\ff\ff\ff\ff")
  (data (;19;) (i32.const 2200) "basic_string\00%d\00%u\00%lu\00allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size\00vector\00std::exception")
  (data (;20;) (i32.const 2320) "0\09\00\00\08\00\00\00\09\00\00\00\0a\00\00\00St9exception\00\00\00\00\d8\0a\00\00 \09\00\00\00\00\00\00\5c\09\00\00\0b\00\00\00\0c\00\00\00\0d\00\00\00St11logic_error\00\00\0b\00\00L\09\00\000\09\00\00\00\00\00\00\90\09\00\00\0b\00\00\00\0e\00\00\00\0d\00\00\00St12length_error\00\00\00\00\00\0b\00\00|\09\00\00\5c\09\00\00St9type_info\00\00\00\00\d8\0a\00\00\9c\09\00\00N10__cxxabiv116__shim_type_infoE\00\00\00\00\00\0b\00\00\b4\09\00\00\ac\09\00\00N10__cxxabiv117__class_type_infoE\00\00\00\00\0b\00\00\e4\09\00\00\d8\09\00\00N10__cxxabiv117__pbase_type_infoE\00\00\00\00\0b\00\00\14\0a\00\00\d8\09\00\00N10__cxxabiv119__pointer_type_infoE\00\00\0b\00\00D\0a\00\008\0a\00\00\00\00\00\00\b8\0a\00\00\0f\00\00\00\10\00\00\00\11\00\00\00\12\00\00\00\13\00\00\00N10__cxxabiv123__fundamental_type_infoE\00\00\0b\00\00\90\0a\00\00\d8\09\00\00v\00\00\00|\0a\00\00\c4\0a\00\00\00\00\00\00\08\0a\00\00\0f\00\00\00\14\00\00\00\11\00\00\00\12\00\00\00\15\00\00\00\16\00\00\00\17\00\00\00\18\00\00\00\00\00\00\00H\0b\00\00\0f\00\00\00\19\00\00\00\11\00\00\00\12\00\00\00\15\00\00\00\1a\00\00\00\1b\00\00\00\1c\00\00\00N10__cxxabiv120__si_class_type_infoE\00\00\00\00\00\0b\00\00 \0b\00\00\08\0a")
  (data (;21;) (i32.const 2912) "\ec\0c")
  (data (;22;) (i32.const 2928) "\80\0b\00\00my_root_id\00\00\d8\0a\00\00\88\0b\00\003$_1")
  (data (;23;) (i32.const 2964) "\b8\0c\00\00#\00\00\00$\00\00\00%\00\00\00&\00\00\00'\00\00\00(\00\00\00)\00\00\00*\00\00\00+\00\00\00,\00\00\00-\00\00\00.\00\00\00/\00\00\000\00\00\001\00\00\002\00\00\003\00\00\004\00\00\005\00\00\006\00\00\00\00\00\00\00@\0c\00\00#\00\00\007\00\00\00%\00\00\00&\00\00\00'\00\00\00(\00\00\00)\00\00\00*\00\00\00+\00\00\00,\00\00\008\00\00\009\00\00\00:\00\00\000\00\00\001\00\00\002\00\00\003\00\00\004\00\00\005\00\00\006\00\00\00\00\0b\00\00\a1\0c\00\00\b8\0c\00\00examples/wasm/envoy_filter_http_wasm_example.cc\00:\00]::\00onTick\00() \00onStart\00onConfigure\0018ExampleRootContext\00\00\00\00\0b\00\00\c4\0c\00\00\d4\0c\00\0011RootContext\00\00\00\d8\0a\00\00\dc\0c\00\0011ContextBase\00\00\00\d8\0a\00\00\f4\0c\00\003$_0")
  (data (;24;) (i32.const 3328) "`\0d\00\00;\00\00\00<\00\00\00=\00\00\00>\00\00\00?\00\00\00@\00\00\00A\00\00\00B\00\00\00+\00\00\00C\00\00\00D\00\00\00E\00\00\00F\00\00\00G\00\00\00H\00\00\00I\00\00\00J\00\00\00K\00\00\00L\00\00\00M\00\00\00N\00\00\00O\00\00\00P\00\00\00\00\0b\00\00r\0e\00\00\84\0e\00\00onDone\00onDone \00Hello, world\00onResponseHeaders\00onResponseHeaders \00headers: \00X-Wasm-custom\00FOO\00content-type\00text/plain; charset=utf-8\00content-length\00onRequestBody\00onRequestBody \00onRequestHeaders\00onRequestHeaders \00onDelete\00onDelete \00onLog\00onLog \00onCreate\00onCreate \0014ExampleContext\00\00\00\0b\00\00\90\0e\00\00\d4\0c\00\007Context")
  (data (;25;) (i32.const 3744) "\84\0e\00\00;\00\00\00Q\00\00\00=\00\00\00>\00\00\00'\00\00\00@\00\00\00)\00\00\00*\00\00\00+\00\00\00C\00\00\00D\00\00\00E\00\00\00F\00\00\00G\00\00\00R\00\00\00I\00\00\00S\00\00\00K\00\00\00T\00\00\00M\00\00\00U\00\00\00O\00\00\00V\00\00\00plugin_root_id\00proxy_get_property(\22plugin_root_id\22, sizeof(\22plugin_root_id\22) - 1, &root_id_ptr, &root_id_size)\00allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size")
  (data (;26;) (i32.const 4028) "\01\00\00\00\c8\0a")
  (data (;27;) (i32.const 4212) "\d8\10")
  (data (;28;) (i32.const 4896) "\c0\13P")
)